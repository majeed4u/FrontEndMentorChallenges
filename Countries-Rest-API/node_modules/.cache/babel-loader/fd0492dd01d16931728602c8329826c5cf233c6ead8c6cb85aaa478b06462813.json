{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majed\\\\Documents\\\\GitHub\\\\FrontEndMentorChallenges\\\\Countries-Rest-API\\\\src\\\\pages\\\\SingleCountry.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ApiURL } from '../shared/Api';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleCountry = () => {\n  _s();\n  const [country, setCountry] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const getCountryByName = async countryName => {\n    const res = await axios(`${ApiURL}/name/${countryName}`);\n    if (!res.ok) throw new Error('could not found');\n    const data = await res.data;\n    setCountry(data);\n    setLoading(false);\n    try {} catch (error) {\n      setLoading(false);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    getCountryByName();\n  }, [countryName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), country.map((country, index) => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flags.png,\n            alt: country.name.co\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleCountry, \"cUs66f8tJ61JrxhZ1cUebEw5zcU=\");\n_c = SingleCountry;\nexport default SingleCountry;\nvar _c;\n$RefreshReg$(_c, \"SingleCountry\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ApiURL","axios","Link","SingleCountry","country","setCountry","loading","setLoading","error","setError","getCountryByName","countryName","res","ok","Error","data","message","map","index","flags","png","name","co"],"sources":["C:/Users/majed/Documents/GitHub/FrontEndMentorChallenges/Countries-Rest-API/src/pages/SingleCountry.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ApiURL } from '../shared/Api';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst SingleCountry = () => {\n  const [country, setCountry] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const getCountryByName = async (countryName) => {\n    const res = await axios(`${ApiURL}/name/${countryName}`);\n    if (!res.ok) throw new Error('could not found');\n    const data = await res.data;\n    setCountry(data);\n    setLoading(false);\n    try {\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    getCountryByName();\n  }, [countryName]);\n  return (\n    <div>\n      <button>\n        <Link to='/'>back</Link>\n      </button>\n      {country.map((country, index) => {\n        return (\n          <article>\n            <div>\n              <img src={country.flags.png} alt={country.name.co} />\n            </div>\n          </article>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SingleCountry;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,gBAAgB,GAAG,MAAOC,WAAW,IAAK;IAC9C,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAAE,GAAED,MAAO,SAAQW,WAAY,EAAC,CAAC;IACxD,IAAI,CAACC,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IAC/C,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAI;IAC3BV,UAAU,CAACU,IAAI,CAAC;IAChBR,UAAU,CAAC,KAAK,CAAC;IACjB,IAAI,CACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;IACzB;EACF,CAAC;EACDlB,SAAS,CAAC,MAAM;IACdY,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC;EACjB,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAY;MAAA;MAAA;MAAA;IAAA,QACjB,EACRP,OAAO,CAACa,GAAG,CAAC,CAACb,OAAO,EAAEc,KAAK,KAAK;MAC/B,oBACE;QAAA,uBACE;UAAA,uBACE;YAAK,GAAG,EAAEd,OAAO,CAACe,KAAK,CAACC,GAAI;YAAC,GAAG,EAAEhB,OAAO,CAACiB,IAAI,CAACC;UAAG;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACjD;QAAA;QAAA;QAAA;MAAA,QACE;IAEd,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GApCInB,aAAa;AAAA,KAAbA,aAAa;AAsCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}